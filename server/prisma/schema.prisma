generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model Account {
  id Int @id @default(autoincrement())
  firstName           String  @map("first_name") @db.VarChar(45)
  lastName            String  @map("last_name") @db.VarChar(45)
  login               String  @unique @db.VarChar(45)
  password            String
  role                String  @db.VarChar(45)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(3)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamp(3)
  messages Messages[]
}
model User {
  id Int     @id @default(autoincrement())
  name       String
  telegramId BigInt @unique
  createdAt  DateTime @default(now()) @map("created_at") @db.Timestamp(3)
  updatedAt  DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamp(3)
  messages Messages[]
}
model Chat {
  id        Int    @id @default(autoincrement())
  chatId    BigInt
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(3)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamp(3)

  messages Messages[]
}
model Messages {
  id Int    @id @default(autoincrement())
  message   String @db.Text
  type      String
  userId    Int?
  accountId Int?
  chatId    Int
  chat      Chat?    @relation(fields: [chatId], references: [id])
  user      User?    @relation(fields: [userId], references: [id])
  account Account? @relation(fields: [accountId], references: [id])
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(3)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamp(3)
}